Index: catan/player.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame, \\\r\n    random\r\nimport math\r\nfrom catan.constants import HOUSE_POSITIONS, CYAN, VIC_POINT_THRESHOLD, BUFFER, ROAD_POSITIONS, NUMBER_FONT, BLACK, BANK_NUMBER_FONT,\\\r\n    PLAYER_NAME_FONT\r\n\r\n\r\n\r\nclass Player:\r\n    def __init__(self, name, color):\r\n        self.name = name\r\n        self.color = color\r\n\r\n        self.victory_points = 0\r\n        self.resources = {'forest': 10, 'hills': 10, 'pasture': 10, 'fields': 10, 'mountains': 10}\r\n        self.development_cards = []\r\n        self.houses = []\r\n        self.cities = []\r\n        self.roads = []\r\n        self.knights_played = 0\r\n        self.dice_roll = [1, 1]\r\n        self.trade_ratios = {'forest': (4, 1), 'hills': (4, 1), 'pasture': (4, 1), 'fields': (4, 1), 'mountains': (4, 1)}\r\n\r\n    def get_name(self):\r\n        return self.name\r\n\r\n    def get_color(self):\r\n        return self.color\r\n\r\n    def add_knight(self):\r\n        self.knights_played += 1\r\n\r\n    def get_knights_played(self):\r\n        return self.knights_played\r\n\r\n    def get_trade_ratios(self):\r\n        return self.trade_ratios\r\n\r\n    def update_trade_ratios(self, resource_type, ratio):\r\n        self.trade_ratios[resource_type] = ratio\r\n\r\n    def update_all_trade_ratios(self, ratio):\r\n        for key, value in self.trade_ratios.items():\r\n            if value == (4, 1):\r\n                self.trade_ratios[key] = (3, 1)\r\n\r\n    def house_allowance(self):\r\n        if len(self.houses) >= 5:\r\n            return False\r\n        else:\r\n            return True\r\n\r\n    def road_allowance(self):\r\n        if len(self.roads) >= 15:\r\n            return False\r\n        else:\r\n            return True\r\n\r\n    def city_allowance(self):\r\n        if len(self.cities) >= 4:\r\n            return False\r\n        else:\r\n            return True\r\n\r\n\r\n    def draw_trade_ratio_maritime(self, screen):\r\n        y_pos = 650\r\n        ratios = self.trade_ratios\r\n        for resource_type, ratio in ratios.items():\r\n            if resource_type == 'forest':\r\n                ratio_image = NUMBER_FONT.render(\"{}:1\".format(ratio[0]), True, BLACK)\r\n                ratio_rect = ratio_image.get_rect(center=(742, y_pos))\r\n                screen.blit(ratio_image, ratio_rect)\r\n            elif resource_type == 'pasture':\r\n                ratio_image = NUMBER_FONT.render(\"{}:1\".format(ratio[0]), True, BLACK)\r\n                ratio_rect = ratio_image.get_rect(center=(851, y_pos))\r\n                screen.blit(ratio_image, ratio_rect)\r\n            elif resource_type == 'fields':\r\n                ratio_image = NUMBER_FONT.render(\"{}:1\".format(ratio[0]), True, BLACK)\r\n                ratio_rect = ratio_image.get_rect(center=(960, y_pos))\r\n                screen.blit(ratio_image, ratio_rect)\r\n            elif resource_type == 'mountains':\r\n                ratio_image = NUMBER_FONT.render(\"{}:1\".format(ratio[0]), True, BLACK)\r\n                ratio_rect = ratio_image.get_rect(center=(1069, y_pos))\r\n                screen.blit(ratio_image, ratio_rect)\r\n            elif resource_type == 'hills':\r\n                ratio_image = NUMBER_FONT.render(\"{}:1\".format(ratio[0]), True, BLACK)\r\n                ratio_rect = ratio_image.get_rect(center=(1178, y_pos))\r\n                screen.blit(ratio_image, ratio_rect)\r\n\r\n    def has_won(self):\r\n        if self.victory_points >= VIC_POINT_THRESHOLD:\r\n            return True\r\n\r\n    def add_resource(self, resource_type):\r\n        if resource_type == 'desert':\r\n            return\r\n        self.resources[resource_type] += 1\r\n\r\n    def remove_resource(self, resource_type):\r\n        if resource_type == 'desert':\r\n            return\r\n        self.resources[resource_type] -= 1\r\n\r\n    def remove_resource_with_amount(self, resource_type, amount):\r\n        self.resources[resource_type] -= amount\r\n    def remove_resources_for_placement(self, placement_type):\r\n        if placement_type == \"road\":\r\n            self.resources['forest'] -= 1\r\n            self.resources['hills'] -= 1\r\n        elif placement_type == \"house\":\r\n            self.resources['forest'] -= 1\r\n            self.resources['fields'] -= 1\r\n            self.resources['pasture'] -= 1\r\n            self.resources['hills'] -= 1\r\n        elif placement_type == \"city\":\r\n            self.resources['fields'] -= 2\r\n            self.resources['mountains'] -= 3\r\n        elif placement_type == \"dev card\":\r\n            self.resources['fields'] -= 1\r\n            self.resources['mountains'] -= 1\r\n            self.resources['pasture'] -= 1\r\n\r\n    def remove_resources_for_discard(self):\r\n        pass  # this will allow the player to pick which resources to discard when a player rolls a 7 and\r\n        pass  # the player has more than 7 cards\r\n\r\n    def get_resources(self):\r\n        return self.resources\r\n\r\n    def remove_development_card(self, card_type):\r\n        self.development_cards.remove(card_type)\r\n\r\n    def add_development_card(self, card_type):\r\n        self.development_cards.append(card_type)\r\n\r\n    def get_development_cards(self):\r\n        return self.development_cards\r\n\r\n    def get_dev_card_total_by_type(self, card_type):\r\n        return self.development_cards.count(card_type)\r\n\r\n    def add_victory_point(self):\r\n        self.victory_points += 1\r\n\r\n    def remove_victory_point(self):\r\n        self.victory_points -= 1\r\n\r\n    def get_victory_points(self):\r\n        return self.victory_points\r\n\r\n    def add_house(self, position):\r\n        self.houses.append(position)\r\n\r\n    def remove_house(self, position):\r\n        self.houses.remove(position)\r\n\r\n    def get_house(self):\r\n        return self.houses\r\n\r\n    def add_city(self, position):\r\n        self.cities.append(position)\r\n\r\n    def get_cities(self):\r\n        return self.cities\r\n\r\n    def is_valid_house_placement(self, house_pos):\r\n        p_roads = self.get_roads()\r\n        for start, end in p_roads:\r\n            if start == house_pos or end == house_pos:\r\n                return True\r\n\r\n    def has_enough_resources(self, placement_type):\r\n        if placement_type == \"road\":\r\n            if self.resources['forest'] >= 1 and self.resources['hills'] >= 1:\r\n                return True\r\n            else:\r\n                return False\r\n        elif placement_type == \"house\":\r\n            if self.resources['forest'] >= 1 and self.resources['fields'] >= 1 and self.resources['pasture'] >= 1 and \\\r\n                    self.resources['hills'] >= 1:\r\n                return True\r\n            else:\r\n                return False\r\n        elif placement_type == \"city\":\r\n            if self.resources['fields'] >= 2 and self.resources['mountains'] >= 3:\r\n                return True\r\n            else:\r\n                return False\r\n        elif placement_type == \"dev card\":\r\n            if self.resources['fields'] >= 1 and self.resources['mountains'] >= 1 and self.resources[\"pasture\"] >= 1:\r\n                return True\r\n            else:\r\n                return False\r\n\r\n    def add_road(self, position):\r\n        self.roads.append(position)\r\n\r\n    def get_roads(self):\r\n        return self.roads\r\n\r\n    def is_valid_road_placement(self, road_pos):\r\n        buffer_distance = 73\r\n        print(self.name, \"wants to place a road at\", road_pos)\r\n\r\n        # Calculate center points of player's current roads\r\n        road_center_points = []\r\n        for start, end in self.roads:\r\n            x = (start[0] + end[0]) / 2\r\n            y = (start[1] + end[1]) / 2\r\n            road_center_points.append((x, y))\r\n\r\n        # Check if given road position is within buffer distance of any road center point\r\n        for center_point in road_center_points:\r\n            if math.sqrt((road_pos[0][0] - center_point[0]) ** 2 + (\r\n                    road_pos[0][1] - center_point[1]) ** 2) <= buffer_distance or \\\r\n                    math.sqrt((road_pos[1][0] - center_point[0]) ** 2 + (\r\n                            road_pos[1][1] - center_point[1]) ** 2) <= buffer_distance:\r\n                print(\"True\")\r\n                return True\r\n\r\n        print(\"False\")\r\n        return False\r\n\r\n    def roll_dice(self):\r\n        nums = [random.randint(1, 6), random.randint(1, 6)]\r\n        self.dice_roll = nums\r\n\r\n    def get_dice_number(self):\r\n        return sum(self.dice_roll)\r\n\r\n    def get_dice_roll(self):\r\n        return self.dice_roll\r\n\r\n    def draw_dice(self, screen):\r\n        dice_1 = pygame.image.load(\"assets/UI/dice/{}.png\".format(self.dice_roll[0]))\r\n        dice_2 = pygame.image.load(\"assets/UI/dice/{}.png\".format(self.dice_roll[1]))\r\n        dice_1_rect = dice_1.get_rect(center=(508, 47))\r\n        dice_2_rect = dice_2.get_rect(center=(593, 47))\r\n        screen.blit(dice_1, dice_1_rect)\r\n        screen.blit(dice_2, dice_2_rect)\r\n\r\n    def draw_houses(self, screen, house_image):\r\n        if house_image is not None:\r\n            for house in self.houses:\r\n                house_rect = house_image.get_rect(center=house)\r\n                screen.blit(house_image, house_rect)\r\n\r\n    def draw_cities(self, screen, city_image):\r\n        for city in self.cities:\r\n            city_rect = city_image.get_rect(center=city)\r\n            screen.blit(city_image, city_rect)\r\n\r\n    def draw_roads(self, screen):\r\n        for road in self.roads:\r\n            pygame.draw.line(screen, self.color, road[0], road[1], 10)\r\n\r\n    def draw_resources(self, screen, y_pos):\r\n        # draw wood number\r\n        wood = BANK_NUMBER_FONT.render(\"{}\".format(self.resources['forest']), True, BLACK)\r\n        wood_rect = wood.get_rect(center=(1395, y_pos))\r\n        screen.blit(wood, wood_rect)\r\n\r\n        # draw sheep number\r\n        sheep = BANK_NUMBER_FONT.render(\"{}\".format(self.resources['pasture']), True, BLACK)\r\n        sheep_rect = sheep.get_rect(center=(1455, y_pos))\r\n        screen.blit(sheep, sheep_rect)\r\n\r\n        # draw wheat number\r\n        wheat = BANK_NUMBER_FONT.render(\"{}\".format(self.resources['fields']), True, BLACK)\r\n        wheat_rect = wheat.get_rect(center=(1515, y_pos))\r\n        screen.blit(wheat, wheat_rect)\r\n\r\n        # draw ore number\r\n        ore = BANK_NUMBER_FONT.render(\"{}\".format(self.resources['mountains']), True, BLACK)\r\n        ore_rect = ore.get_rect(center=(1575, y_pos))\r\n        screen.blit(ore, ore_rect)\r\n\r\n        # draw brick number\r\n        brick = BANK_NUMBER_FONT.render(\"{}\".format(self.resources['hills']), True, BLACK)\r\n        brick_rect = brick.get_rect(center=(1635, y_pos))\r\n        screen.blit(brick, brick_rect)\r\n\r\n        # draw dev_card number\r\n        dev_card = BANK_NUMBER_FONT.render(\"{}\".format(len(self.development_cards)), True, BLACK)\r\n        dev_card_rect = dev_card.get_rect(center=(1695, y_pos))\r\n        screen.blit(dev_card, dev_card_rect)\r\n\r\n        # draw knight number\r\n        knight = BANK_NUMBER_FONT.render(\"{}\".format(self.knights_played), True, BLACK)\r\n        knight_rect = knight.get_rect(center=(1755, y_pos))\r\n        screen.blit(knight, knight_rect)\r\n\r\n        # draw road number\r\n        road = BANK_NUMBER_FONT.render(\"{}\".format(len(self.roads)), True, BLACK)\r\n        road_rect = road.get_rect(center=(1815, y_pos))\r\n        screen.blit(road, road_rect)\r\n\r\n        # draw vic_points number\r\n        vic_points = BANK_NUMBER_FONT.render(\"{}\".format(self.victory_points), True, BLACK)\r\n        vic_points_rect = vic_points.get_rect(center=(1875, y_pos))\r\n        screen.blit(vic_points, vic_points_rect)\r\n\r\n    def draw_resource_in_maritime(self, screen, selected_resource):\r\n        y_pos = 450\r\n        if selected_resource == \"wood\":\r\n            # draw wood number\r\n            wood = NUMBER_FONT.render(\"{}\".format(self.resources['forest']), True, BLACK)\r\n            wood_rect = wood.get_rect(center=(1217, y_pos))\r\n            screen.blit(wood, wood_rect)\r\n\r\n        if selected_resource == \"sheep\":\r\n            # draw sheep number\r\n            sheep = NUMBER_FONT.render(\"{}\".format(self.resources['pasture']), True, BLACK)\r\n            sheep_rect = sheep.get_rect(center=(1217, y_pos))\r\n            screen.blit(sheep, sheep_rect)\r\n\r\n        if selected_resource == \"wheat\":\r\n            # draw wheat number\r\n            wheat = NUMBER_FONT.render(\"{}\".format(self.resources['fields']), True, BLACK)\r\n            wheat_rect = wheat.get_rect(center=(1217, y_pos))\r\n            screen.blit(wheat, wheat_rect)\r\n\r\n        if selected_resource == \"ore\":\r\n            # draw ore number\r\n            ore = NUMBER_FONT.render(\"{}\".format(self.resources['mountains']), True, BLACK)\r\n            ore_rect = ore.get_rect(center=(1217, y_pos))\r\n            screen.blit(ore, ore_rect)\r\n        if selected_resource == \"brick\":\r\n            # draw brick number\r\n            brick = NUMBER_FONT.render(\"{}\".format(self.resources['hills']), True, BLACK)\r\n            brick_rect = brick.get_rect(center=(1217, y_pos))\r\n            screen.blit(brick, brick_rect)\r\n\r\n    def draw_player_name(self, screen, y_pos):\r\n        player_name = PLAYER_NAME_FONT.render(\"{}\".format(self.name), True, self.color)\r\n        player_name_rect = player_name.get_rect(center=(1300, y_pos))\r\n        screen.blit(player_name, player_name_rect)\r\n\r\n    def draw_dev_card_numbers(self, screen):\r\n        knight = NUMBER_FONT.render(\"{}x\".format(self.get_dev_card_total_by_type('knight')), True, BLACK)\r\n        knight_rect = knight.get_rect(center=(170, 707))\r\n        screen.blit(knight, knight_rect)\r\n\r\n        victory = NUMBER_FONT.render(\"{}x\".format(self.get_dev_card_total_by_type('victory')), True, BLACK)\r\n        victory_rect = victory.get_rect(center=(355, 707))\r\n        screen.blit(victory, victory_rect)\r\n\r\n        road = NUMBER_FONT.render(\"{}x\".format(self.get_dev_card_total_by_type('road')), True, BLACK)\r\n        road_rect = road.get_rect(center=(540, 707))\r\n        screen.blit(road, road_rect)\r\n\r\n        mono = NUMBER_FONT.render(\"{}x\".format(self.get_dev_card_total_by_type('monopoly')), True, BLACK)\r\n        mono_rect = mono.get_rect(center=(170, 857))\r\n        screen.blit(mono, mono_rect)\r\n\r\n        year = NUMBER_FONT.render(\"{}x\".format(self.get_dev_card_total_by_type('year')), True, BLACK)\r\n        year_rect = year.get_rect(center=(355, 857))\r\n        screen.blit(year, year_rect)\r\n\r\n        blank = NUMBER_FONT.render(\"{}x\".format(len(self.development_cards)), True, BLACK)\r\n        blank_rect = blank.get_rect(center=(540, 857))\r\n        screen.blit(blank, blank_rect)\r\n\r\n    def draw_dev_card_num_in_bank_trade(self, screen):\r\n        knight = NUMBER_FONT.render(\"{}x\".format(self.get_dev_card_total_by_type('knight')), True, BLACK)\r\n        knight_rect = knight.get_rect(center=(742, 600))\r\n        screen.blit(knight, knight_rect)\r\n\r\n        victory = NUMBER_FONT.render(\"{}x\".format(self.get_dev_card_total_by_type('victory')), True, BLACK)\r\n        victory_rect = victory.get_rect(center=(851, 600))\r\n        screen.blit(victory, victory_rect)\r\n\r\n        road = NUMBER_FONT.render(\"{}x\".format(self.get_dev_card_total_by_type('road')), True, BLACK)\r\n        road_rect = road.get_rect(center=(960, 600))\r\n        screen.blit(road, road_rect)\r\n\r\n        mono = NUMBER_FONT.render(\"{}x\".format(self.get_dev_card_total_by_type('monopoly')), True, BLACK)\r\n        mono_rect = mono.get_rect(center=(1069, 600))\r\n        screen.blit(mono, mono_rect)\r\n\r\n        year = NUMBER_FONT.render(\"{}x\".format(self.get_dev_card_total_by_type('year')), True, BLACK)\r\n        year_rect = year.get_rect(center=(1178, 600))\r\n        screen.blit(year, year_rect)\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/catan/player.py b/catan/player.py
--- a/catan/player.py	(revision 77c5677ca3cb7a53c6b5c0ce316710f900d7bffe)
+++ b/catan/player.py	(date 1682430138199)
@@ -42,7 +42,7 @@
     def update_all_trade_ratios(self, ratio):
         for key, value in self.trade_ratios.items():
             if value == (4, 1):
-                self.trade_ratios[key] = (3, 1)
+                self.trade_ratios[key] = ratio
 
     def house_allowance(self):
         if len(self.houses) >= 5:
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"50672599-dbe3-4626-b5b5-eee0fb82f9d5\" name=\"Changes\" comment=\"Updated city colors and dynamic error feedback to user.\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OpHnV94XJAqOyqkV0vlYf0iWWk\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Catan-Group-38\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"50672599-dbe3-4626-b5b5-eee0fb82f9d5\" name=\"Changes\" comment=\"\" />\r\n      <created>1682250770032</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1682250770032</updated>\r\n      <workItem from=\"1682250772203\" duration=\"16898000\" />\r\n      <workItem from=\"1682269840728\" duration=\"431000\" />\r\n      <workItem from=\"1682274040440\" duration=\"669000\" />\r\n      <workItem from=\"1682284229200\" duration=\"1535000\" />\r\n      <workItem from=\"1682293233775\" duration=\"94000\" />\r\n      <workItem from=\"1682293347813\" duration=\"67000\" />\r\n      <workItem from=\"1682296331550\" duration=\"2001000\" />\r\n      <workItem from=\"1682303499088\" duration=\"866000\" />\r\n      <workItem from=\"1682344230420\" duration=\"22964000\" />\r\n      <workItem from=\"1682376977161\" duration=\"561000\" />\r\n      <workItem from=\"1682423062804\" duration=\"5949000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Victory Screen implemented for classic and time trial.\">\r\n      <created>1682264090995</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682264090996</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Victory Screen implemented for classic and time trial.\">\r\n      <created>1682264128793</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682264128793</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Included build and dist exe.\">\r\n      <created>1682274107492</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682274107492</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"BUG FIXES: CITIES COST\">\r\n      <created>1682297745824</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682297745824</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Multiple Bug Fixes. Patch notes txt included in dist folder.\">\r\n      <created>1682360405795</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682360405795</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"AI resource mgmt improvements\">\r\n      <created>1682364873709</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682364873709</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Improved AI. AI Cities placement WIP\">\r\n      <created>1682371668612</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682371668612</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Updated city colors and dynamic error feedback to user.\">\r\n      <created>1682428843360</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682428843360</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Updated city colors and dynamic error feedback to user.\">\r\n      <created>1682428851727</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682428851727</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Victory Screen implemented for classic and time trial.\" />\r\n    <MESSAGE value=\"Included build and dist exe.\" />\r\n    <MESSAGE value=\"BUG FIXES: CITIES COST\" />\r\n    <MESSAGE value=\"Multiple Bug Fixes. Patch notes txt included in dist folder.\" />\r\n    <MESSAGE value=\"AI resource mgmt improvements\" />\r\n    <MESSAGE value=\"Improved AI. AI Cities placement WIP\" />\r\n    <MESSAGE value=\"Updated city colors and dynamic error feedback to user.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Updated city colors and dynamic error feedback to user.\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Catan_Group_38$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1682428653766\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 77c5677ca3cb7a53c6b5c0ce316710f900d7bffe)
+++ b/.idea/workspace.xml	(date 1682431122343)
@@ -4,7 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="50672599-dbe3-4626-b5b5-eee0fb82f9d5" name="Changes" comment="Updated city colors and dynamic error feedback to user." />
+    <list default="true" id="50672599-dbe3-4626-b5b5-eee0fb82f9d5" name="Changes" comment="Added new build with PATCHNOTES 4.0.txt. build can be found in dist folder.">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/catan/player.py" beforeDir="false" afterPath="$PROJECT_DIR$/catan/player.py" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -93,7 +96,7 @@
       <workItem from="1682303499088" duration="866000" />
       <workItem from="1682344230420" duration="22964000" />
       <workItem from="1682376977161" duration="561000" />
-      <workItem from="1682423062804" duration="5949000" />
+      <workItem from="1682423062804" duration="7952000" />
     </task>
     <task id="LOCAL-00001" summary="Victory Screen implemented for classic and time trial.">
       <created>1682264090995</created>
@@ -158,7 +161,21 @@
       <option name="project" value="LOCAL" />
       <updated>1682428851727</updated>
     </task>
-    <option name="localTasksCounter" value="10" />
+    <task id="LOCAL-00010" summary="Added new build with PATCHNOTES 4.0.txt. build can be found in dist folder.">
+      <created>1682429271519</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1682429271519</updated>
+    </task>
+    <task id="LOCAL-00011" summary="Added new build with PATCHNOTES 4.0.txt. build can be found in dist folder.">
+      <created>1682429283803</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1682429283803</updated>
+    </task>
+    <option name="localTasksCounter" value="12" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -173,7 +190,8 @@
     <MESSAGE value="AI resource mgmt improvements" />
     <MESSAGE value="Improved AI. AI Cities placement WIP" />
     <MESSAGE value="Updated city colors and dynamic error feedback to user." />
-    <option name="LAST_COMMIT_MESSAGE" value="Updated city colors and dynamic error feedback to user." />
+    <MESSAGE value="Added new build with PATCHNOTES 4.0.txt. build can be found in dist folder." />
+    <option name="LAST_COMMIT_MESSAGE" value="Added new build with PATCHNOTES 4.0.txt. build can be found in dist folder." />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/Catan_Group_38$main.coverage" NAME="main Coverage Results" MODIFIED="1682428653766" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
